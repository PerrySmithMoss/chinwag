name: Deploy API to VPS

on:
  push:
    branches: [master]
    paths:
      - "server/**"
      - ".github/workflows/**"
      - "docker-stack.yaml"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Yarn cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('server/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        working-directory: ./server
        run: yarn install --frozen-lockfile

      - name: Run tests
        working-directory: ./server
        run: yarn test

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    needs:
      - run-tests

    env:
      IMAGE_NAME: ghcr.io/perrysmithmoss/chinwag:${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/perrysmithmoss/chinwag
          tags: |
            type=raw,value=${{ github.sha }}
            type=ref,event=branch
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./server
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          no-cache: true
          progress: plain

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/master'
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: |
            Automated release for commit ${{ github.sha }}
            Docker image: ${{ env.IMAGE_NAME }}

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: create env file
        run: |
          echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile

      - name: Create server env file
        run: |
          mkdir -p server

          cat <<EOF > server/.env.production
          NODE_ENV=production
          PORT=5560
          SERVER_DOMAIN=.perrysmithmoss.com
          SERVER_URL=https://chinwag-api.perrysmithmoss.com
          CLIENT_URL=https://chinwag.vercel.app
          ACCESS_TOKEN_COOKIE_NAME=chinwag_access_token
          ACCESS_TOKEN_TTL=${{ secrets.ACCESS_TOKEN_TTL }}
          REFRESH_TOKEN_COOKIE_NAME=chinwag_refresh_token
          REFRESH_TOKEN_TTL=${{ secrets.REFRESH_TOKEN_TTL }}
          EOF

      - name: Docker Stack Deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: chinwag
          file: docker-stack.yaml
          host: ${{ secrets.VPS_IP }}
          user: deploy
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile
